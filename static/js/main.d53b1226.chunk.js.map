{"version":3,"sources":["Components/Card.js","App.js","index.js"],"names":["Card","props","react_default","a","createElement","className","style","background","concat","image","backgroundSize","onClick","handleClick","id","App","state","score","topScore","faces","pickedFaces","clicked","alert","renderFaces","arr","i","push","object","_this","Math","floor","random","length","setState","incrementState","console","log","prevState","Object","toConsumableArray","checkIfClickedTwice","matchIndex","forEach","item","Number","showAlert","setTimeout","gameFailed","event","target","this","_this2","display","map","Components_Card","key","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"g1EAceA,MAXf,SAAcC,GACV,OACIC,EAAAC,EAAAC,cAAA,OACIC,UAAY,OACZC,MAAS,CAACC,WAAU,OAAAC,OAASP,EAAMQ,MAAf,KAAyBC,eAAgB,SAC7DC,QAAWV,EAAMW,YACjBC,GAAMZ,EAAMY,MC+FTC,6MAnGbC,MAAQ,CACNC,MAAO,EACPC,SAAU,EACVC,QACAC,YAAa,GACbC,QAAS,GACTC,MAAO,UAGTC,YAAc,SAAAC,GACZ,IAAIC,EAAI,EACJL,EAAc,GAElB,IAAKK,EAAI,EAAGA,EAAI,EAAGA,IACjBL,EAAYM,KAAK,CAACC,OAAQC,EAAKZ,MAAMG,MAAMU,KAAKC,MAAMD,KAAKE,OAAO,EAAGP,EAAIQ,QAAQR,EAAIQ,SAAUlB,GAAIW,IAIrGG,EAAKK,SAAS,CACZb,YAAaA,OAIjBc,eAAiB,SAACpB,GAChBqB,QAAQC,IAAIR,EAAKZ,OACjBY,EAAKK,SAAU,SAAAI,GACb,MAAQ,CAACpB,MAAOoB,EAAUpB,MAAQ,EAAII,QAAO,GAAAZ,OAAA6B,OAAAC,EAAA,EAAAD,CAAMD,EAAUhB,SAAhB,CAAyBP,IAAKI,SAAWU,EAAKZ,MAAMC,OAASW,EAAKZ,MAAME,SAAYmB,EAAUpB,MAAQ,EAAIoB,EAAUpB,SAEnKW,EAAKL,YAAYJ,MAGnBqB,oBAAsB,SAAC1B,GACrB,IAAI2B,EAAa,EAMjB,OALAb,EAAKZ,MAAMK,QAAQqB,QAAQ,SAAAC,GACtBC,OAAOD,KAAUC,OAAO9B,IACzB2B,QAGDA,EAAa,MAMlBI,UAAY,WACVjB,EAAKK,SAAS,CAACX,MAAQ,SAAU,WAC/BwB,WAAW,WACTlB,EAAKK,SAAS,CAACX,MAAQ,QAAU,eAE/B,WAGRyB,WAAa,WACXnB,EAAKK,SAAU,SAAAI,GACb,MAAQ,CAACpB,MAAO,EAAGI,QAAS,MAE9BO,EAAKL,YAAYJ,GACjBS,EAAKiB,eAGPhC,YAAc,SAAAmC,GACZ,IAAIlC,EAAKkC,EAAMC,OAAOnC,GACnBc,EAAKY,oBAAoBQ,EAAMC,OAAOnC,IACrCc,EAAKM,eAAepB,GAEpBc,EAAKmB,WAAW5B,uFAKpB+B,KAAK3B,YAAYJ,oCAGV,IAAAgC,EAAAD,KACP,OACE/C,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,cACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAf,WACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAY,iBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAW,SAAhB,UAAgC4C,KAAKlC,MAAMC,OAC3Cd,EAAAC,EAAAC,cAAA,OAAKC,UAAW,YAAhB,cAAuC4C,KAAKlC,MAAME,WAEtDf,EAAAC,EAAAC,cAAA,OAAKC,UAAY,QAAQC,MAAS,CAAC6C,QAASF,KAAKlC,MAAMM,QAAvD,kBAEJnB,EAAAC,EAAAC,cAAA,OAAKC,UAAY,aACZ4C,KAAKlC,MAAMI,YAAYiC,IAAI,SAAAV,GAAI,OAC5BxC,EAAAC,EAAAC,cAACiD,EAAD,CACE5C,MAASiC,EAAKhB,OAAOjB,MACrB6C,IAAOZ,EAAK7B,GACZA,GAAM6B,EAAKhB,OAAOb,GAClBD,YAAesC,EAAKtC,yBA3FpB2C,aCClBC,IAASC,OAAOvD,EAAAC,EAAAC,cAACsD,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.d53b1226.chunk.js","sourcesContent":["import React from \"react\";\n\n\nfunction Card(props){\n    return (\n        <div \n            className = 'card' \n            style = {{background: `url(${props.image})`, backgroundSize: \"cover\"}}\n            onClick = {props.handleClick}\n            id = {props.id}>\n        </div>\n    );\n}\n\nexport default Card;\n\n","import React, { Component } from 'react';\nimport faces from \"./friends.json\";\nimport Card from \"./Components/Card\"\n\nclass App extends Component {\n  state = {\n    score: 0,\n    topScore: 0,\n    faces,\n    pickedFaces: [],\n    clicked: [],\n    alert: 'none'\n  }\n\n  renderFaces = arr => {\n    let i = 0;\n    let pickedFaces = [];\n    //console.log(this.state)\n    for (i = 0; i < 8; i++){\n      pickedFaces.push({object: this.state.faces[Math.floor(Math.random(0, arr.length)*arr.length)], id: i});\n      //console.log(pickedFaces[i]);\n    }\n    //console.log(pickedFaces);\n    this.setState({\n      pickedFaces: pickedFaces,\n    })\n  }\n\n  incrementState = (id) => {\n    console.log(this.state)\n    this.setState( prevState => {\n      return ({score: prevState.score + 1 , clicked: [...prevState.clicked, id], topScore: (this.state.score >= this.state.topScore) ? prevState.score + 1 : prevState.score})\n    })\n    this.renderFaces(faces);\n  }\n\n  checkIfClickedTwice = (id) => {\n    let matchIndex = 0;\n    this.state.clicked.forEach(item => {\n      if(Number(item) === Number(id)){\n        matchIndex++;\n      } \n    })\n    if(matchIndex > 0){\n      return false;\n    } else {\n      return true;\n    }\n  }\n  showAlert = () =>{\n    this.setState({alert : \"block\"}, () =>{\n      setTimeout(() =>{\n        this.setState({alert : \"none\"},  () =>{\n        })\n      } , 1500)\n    })\n  }\n  gameFailed = () => {\n    this.setState( prevState => {\n      return ({score: 0, clicked: []})\n    })\n    this.renderFaces(faces);\n    this.showAlert();\n  }\n\n  handleClick = event => {\n    let id = event.target.id;\n    if(this.checkIfClickedTwice(event.target.id)){\n        this.incrementState(id)\n    } else {\n        this.gameFailed(faces)\n    }\n  }\n\n  componentDidMount(){\n    this.renderFaces(faces);\n  }\n\n  render() {\n    return (\n      <div>\n        <header>\n            <div className=\"progname\">Clicker</div>\n            <div className = 'scoresWrapper'>\n                <div className =\"score\">Score: {this.state.score}</div>\n                <div className =\"topScore\">Top Score: {this.state.topScore}</div>\n            </div>\n            <div className = \"alert\" style = {{display: this.state.alert}}>You lose Bro!</div>\n        </header>\n        <div className = 'container'>\n            {this.state.pickedFaces.map(item => \n                <Card \n                  image = {item.object.image}\n                  key = {item.id}\n                  id = {item.object.id}\n                  handleClick = {this.handleClick}\n                 />\n            )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}